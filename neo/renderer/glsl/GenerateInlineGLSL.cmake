function(make_glsl_cpp input_file type)
  get_filename_component(FILENAME ${input_file} NAME_WE)
  message(" => ${FILENAME}${type}")
  get_filename_component(PATHNAME ${input_file} PATH)
  file(READ ${input_file} content)
  set(content "// THIS FILE IS AUTOMATICALLY GENERATED. PLEASE, DO NOT EDIT.\n// You must use \"generate_inline_glsl\" cmake build target to regenerate it from source.\n\n#include \"../glsl_shaders.h\"\nconst char * const ${FILENAME}${type} = R\"(\n${content})\";\n")
  file(WRITE ${PATHNAME}/generated/${FILENAME}${type}.cpp "${content}")
endfunction(make_glsl_cpp)

message("Generating CPP-inlined GLSL shaders")

make_glsl_cpp(${GLSLDIR}/interactionPhongShader.frag FP)
make_glsl_cpp(${GLSLDIR}/interactionPhongShader.vert VP)
make_glsl_cpp(${GLSLDIR}/interactionShader.frag FP)
make_glsl_cpp(${GLSLDIR}/interactionShader.vert VP)
make_glsl_cpp(${GLSLDIR}/fogShader.frag FP)
make_glsl_cpp(${GLSLDIR}/fogShader.vert VP)
make_glsl_cpp(${GLSLDIR}/diffuseMapShader.frag FP)
make_glsl_cpp(${GLSLDIR}/diffuseMapShader.vert VP)
make_glsl_cpp(${GLSLDIR}/cubeMapShader.frag FP)
make_glsl_cpp(${GLSLDIR}/diffuseCubeShader.vert VP)
make_glsl_cpp(${GLSLDIR}/reflectionCubeShader.vert VP)
make_glsl_cpp(${GLSLDIR}/skyboxCubeShader.vert VP)
make_glsl_cpp(${GLSLDIR}/stencilShadowShader.frag FP)
make_glsl_cpp(${GLSLDIR}/stencilShadowShader.vert VP)
make_glsl_cpp(${GLSLDIR}/zfillClipShader.frag FP)
make_glsl_cpp(${GLSLDIR}/zfillClipShader.vert VP)
make_glsl_cpp(${GLSLDIR}/zfillShader.vert VP)
make_glsl_cpp(${GLSLDIR}/zfillShader.frag FP)
